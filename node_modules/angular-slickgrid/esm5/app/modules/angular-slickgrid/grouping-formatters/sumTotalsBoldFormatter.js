import { formatNumber } from '../services/utilities';
import { getValueFromParamsOrFormatterOptions } from '../formatters/formatterUtilities';
export var sumTotalsBoldFormatter = function (totals, columnDef, grid) {
    var field = columnDef.field || '';
    var val = totals.sum && totals.sum[field];
    var params = columnDef && columnDef.params;
    var prefix = params && params.groupFormatterPrefix || '';
    var suffix = params && params.groupFormatterSuffix || '';
    var minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid);
    var maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid);
    var decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');
    var thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');
    var displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);
    if (val != null && !isNaN(+val)) {
        var formattedNumber = formatNumber(val, minDecimal, maxDecimal, displayNegativeNumberWithParentheses, '', '', decimalSeparator, thousandSeparator);
        return "<b>" + prefix + formattedNumber + suffix + "</b>";
    }
    return '';
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VtVG90YWxzQm9sZEZvcm1hdHRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItc2xpY2tncmlkLyIsInNvdXJjZXMiOlsiYXBwL21vZHVsZXMvYW5ndWxhci1zbGlja2dyaWQvZ3JvdXBpbmctZm9ybWF0dGVycy9zdW1Ub3RhbHNCb2xkRm9ybWF0dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsb0NBQW9DLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUV4RixNQUFNLENBQUMsSUFBTSxzQkFBc0IsR0FBeUIsVUFBQyxNQUFXLEVBQUUsU0FBaUIsRUFBRSxJQUFVO0lBQ3JHLElBQU0sS0FBSyxHQUFHLFNBQVMsQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDO0lBQ3BDLElBQU0sR0FBRyxHQUFHLE1BQU0sQ0FBQyxHQUFHLElBQUksTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM1QyxJQUFNLE1BQU0sR0FBRyxTQUFTLElBQUksU0FBUyxDQUFDLE1BQU0sQ0FBQztJQUM3QyxJQUFNLE1BQU0sR0FBRyxNQUFNLElBQUksTUFBTSxDQUFDLG9CQUFvQixJQUFJLEVBQUUsQ0FBQztJQUMzRCxJQUFNLE1BQU0sR0FBRyxNQUFNLElBQUksTUFBTSxDQUFDLG9CQUFvQixJQUFJLEVBQUUsQ0FBQztJQUMzRCxJQUFNLFVBQVUsR0FBRyxvQ0FBb0MsQ0FBQyxZQUFZLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3ZGLElBQU0sVUFBVSxHQUFHLG9DQUFvQyxDQUFDLFlBQVksRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDdkYsSUFBTSxnQkFBZ0IsR0FBRyxvQ0FBb0MsQ0FBQyxrQkFBa0IsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ3hHLElBQU0saUJBQWlCLEdBQUcsb0NBQW9DLENBQUMsbUJBQW1CLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztJQUN6RyxJQUFNLG9DQUFvQyxHQUFHLG9DQUFvQyxDQUFDLHNDQUFzQyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFFbEosSUFBSSxHQUFHLElBQUksSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUU7UUFDL0IsSUFBTSxlQUFlLEdBQUcsWUFBWSxDQUFDLEdBQUcsRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLG9DQUFvQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsZ0JBQWdCLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztRQUNySixPQUFPLFFBQU0sTUFBTSxHQUFHLGVBQWUsR0FBRyxNQUFNLFNBQU0sQ0FBQztLQUN0RDtJQUNELE9BQU8sRUFBRSxDQUFDO0FBQ1osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29sdW1uLCBHcm91cFRvdGFsc0Zvcm1hdHRlciB9IGZyb20gJy4vLi4vbW9kZWxzL2luZGV4JztcclxuaW1wb3J0IHsgZm9ybWF0TnVtYmVyIH0gZnJvbSAnLi4vc2VydmljZXMvdXRpbGl0aWVzJztcclxuaW1wb3J0IHsgZ2V0VmFsdWVGcm9tUGFyYW1zT3JGb3JtYXR0ZXJPcHRpb25zIH0gZnJvbSAnLi4vZm9ybWF0dGVycy9mb3JtYXR0ZXJVdGlsaXRpZXMnO1xyXG5cclxuZXhwb3J0IGNvbnN0IHN1bVRvdGFsc0JvbGRGb3JtYXR0ZXI6IEdyb3VwVG90YWxzRm9ybWF0dGVyID0gKHRvdGFsczogYW55LCBjb2x1bW5EZWY6IENvbHVtbiwgZ3JpZD86IGFueSkgPT4ge1xyXG4gIGNvbnN0IGZpZWxkID0gY29sdW1uRGVmLmZpZWxkIHx8ICcnO1xyXG4gIGNvbnN0IHZhbCA9IHRvdGFscy5zdW0gJiYgdG90YWxzLnN1bVtmaWVsZF07XHJcbiAgY29uc3QgcGFyYW1zID0gY29sdW1uRGVmICYmIGNvbHVtbkRlZi5wYXJhbXM7XHJcbiAgY29uc3QgcHJlZml4ID0gcGFyYW1zICYmIHBhcmFtcy5ncm91cEZvcm1hdHRlclByZWZpeCB8fCAnJztcclxuICBjb25zdCBzdWZmaXggPSBwYXJhbXMgJiYgcGFyYW1zLmdyb3VwRm9ybWF0dGVyU3VmZml4IHx8ICcnO1xyXG4gIGNvbnN0IG1pbkRlY2ltYWwgPSBnZXRWYWx1ZUZyb21QYXJhbXNPckZvcm1hdHRlck9wdGlvbnMoJ21pbkRlY2ltYWwnLCBjb2x1bW5EZWYsIGdyaWQpO1xyXG4gIGNvbnN0IG1heERlY2ltYWwgPSBnZXRWYWx1ZUZyb21QYXJhbXNPckZvcm1hdHRlck9wdGlvbnMoJ21heERlY2ltYWwnLCBjb2x1bW5EZWYsIGdyaWQpO1xyXG4gIGNvbnN0IGRlY2ltYWxTZXBhcmF0b3IgPSBnZXRWYWx1ZUZyb21QYXJhbXNPckZvcm1hdHRlck9wdGlvbnMoJ2RlY2ltYWxTZXBhcmF0b3InLCBjb2x1bW5EZWYsIGdyaWQsICcuJyk7XHJcbiAgY29uc3QgdGhvdXNhbmRTZXBhcmF0b3IgPSBnZXRWYWx1ZUZyb21QYXJhbXNPckZvcm1hdHRlck9wdGlvbnMoJ3Rob3VzYW5kU2VwYXJhdG9yJywgY29sdW1uRGVmLCBncmlkLCAnJyk7XHJcbiAgY29uc3QgZGlzcGxheU5lZ2F0aXZlTnVtYmVyV2l0aFBhcmVudGhlc2VzID0gZ2V0VmFsdWVGcm9tUGFyYW1zT3JGb3JtYXR0ZXJPcHRpb25zKCdkaXNwbGF5TmVnYXRpdmVOdW1iZXJXaXRoUGFyZW50aGVzZXMnLCBjb2x1bW5EZWYsIGdyaWQsIGZhbHNlKTtcclxuXHJcbiAgaWYgKHZhbCAhPSBudWxsICYmICFpc05hTigrdmFsKSkge1xyXG4gICAgY29uc3QgZm9ybWF0dGVkTnVtYmVyID0gZm9ybWF0TnVtYmVyKHZhbCwgbWluRGVjaW1hbCwgbWF4RGVjaW1hbCwgZGlzcGxheU5lZ2F0aXZlTnVtYmVyV2l0aFBhcmVudGhlc2VzLCAnJywgJycsIGRlY2ltYWxTZXBhcmF0b3IsIHRob3VzYW5kU2VwYXJhdG9yKTtcclxuICAgIHJldHVybiBgPGI+JHtwcmVmaXh9JHtmb3JtYXR0ZWROdW1iZXJ9JHtzdWZmaXh9PC9iPmA7XHJcbiAgfVxyXG4gIHJldHVybiAnJztcclxufTtcclxuIl19