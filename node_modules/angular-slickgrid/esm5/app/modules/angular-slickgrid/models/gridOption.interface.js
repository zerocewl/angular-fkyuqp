//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"gridOption.interface.js","sourceRoot":"ng://angular-slickgrid/","sources":["app/modules/angular-slickgrid/models/gridOption.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { TranslateService } from '@ngx-translate/core';\r\nimport {\r\n  AutoResizeOption,\r\n  BackendServiceApi,\r\n  CellMenu,\r\n  CheckboxSelector,\r\n  Column,\r\n  ColumnPicker,\r\n  ContextMenu,\r\n  DraggableGrouping,\r\n  EditCommand,\r\n  ExcelCopyBufferOption,\r\n  ExcelExportOption,\r\n  ExportOption,\r\n  FormatterOption,\r\n  GridMenu,\r\n  GridState,\r\n  HeaderButton,\r\n  HeaderMenu,\r\n  Locale,\r\n  OperatorType,\r\n  OperatorString,\r\n  Pagination,\r\n  RowDetailView,\r\n  RowMoveManager\r\n} from './index';\r\nimport { CustomFooterOption } from './customFooterOption.interface';\r\n\r\nexport interface GridOption {\r\n  /** CSS class name used on newly added row */\r\n  addNewRowCssClass?: string;\r\n\r\n  /** Defaults to true, which leads to always show a vertical scrolling. This is rather important to use when using the Grid Menu (hamburger) */\r\n  alwaysShowVerticalScroll?: boolean;\r\n\r\n  /** Defaults to 100, which is the asynchronous editor loading delay */\r\n  asyncEditorLoadDelay?: number;\r\n\r\n  /** Defaults to false, which leads to load editor asynchronously (delayed) */\r\n  asyncEditorLoading?: boolean;\r\n\r\n  /** Defaults to 50, which is the delay before the asynchronous post renderer start execution */\r\n  asyncPostRenderDelay?: number;\r\n\r\n  /** Defaults to 40, which is the delay before the asynchronous post renderer start cleanup execution */\r\n  asyncPostRenderCleanupDelay?: number;\r\n\r\n  /** Defaults to false, when enabled will try to commit the current edit without focusing on the next row. If a custom editor is implemented and the grid cannot auto commit, you must use this option to implement it yourself */\r\n  autoCommitEdit?: boolean;\r\n\r\n  /** Defaults to false, when enabled will automatically open the inlined editor as soon as there is a focus on the cell (can be combined with \"enableCellNavigation: true\"). */\r\n  autoEdit?: boolean;\r\n\r\n  /** Defaults to true, which leads to automatically adjust the size of each column with the available space. Similar to \"Force Fit Column\" but only happens on first page/component load. */\r\n  autoFitColumnsOnFirstLoad?: boolean;\r\n\r\n  /** Defaults to false, which leads to automatically adjust the size (height) of the grid to display the entire content without any scrolling in the grid. */\r\n  autoHeight?: boolean;\r\n\r\n  /** Auto-resize options (bottom padding, minHeight, ...)  */\r\n  autoResize?: AutoResizeOption;\r\n\r\n  /** Auto-tooltip options (enableForCells, enableForHeaderCells, maxToolTipLength) */\r\n  autoTooltipOptions?: {\r\n    /** are tooltip enabled for all cells? */\r\n    enableForCells: boolean;\r\n\r\n    /** are tooltip enabled for column headers */\r\n    enableForHeaderCells: boolean;\r\n\r\n    /** what is the maximum tooltip length in pixels (only type the number) */\r\n    maxToolTipLength: number;\r\n  };\r\n\r\n  /** Backend Service API definition (GraphQL/OData Services) */\r\n  backendServiceApi?: BackendServiceApi;\r\n\r\n  /** CSS class name used to simulate cell flashing */\r\n  cellFlashingCssClass?: string;\r\n\r\n  /** CSS class name used when highlighting a cell value. Useful to change background color of the activated cell */\r\n  cellHighlightCssClass?: string | null;\r\n\r\n  /** Cell menu options (Action menu) */\r\n  cellMenu?: CellMenu;\r\n\r\n  /** Checkbox Select Plugin options (columnId, cssClass, toolTip, width) */\r\n  checkboxSelector?: CheckboxSelector;\r\n\r\n  /** Column Picker Plugin options (columnTitle, forceFitTitle, syncResizeTitle) */\r\n  columnPicker?: ColumnPicker;\r\n\r\n  /** Context menu options (mouse right+click) */\r\n  contextMenu?: ContextMenu;\r\n\r\n  /** Defaults to false, which leads to create the footer row of the grid */\r\n  createFooterRow?: boolean;\r\n\r\n  /** A callback function that will be used to define row spanning accross multiple columns */\r\n  colspanCallback?: (item: any) => { columns: any };\r\n\r\n  /** Default to false, which leads to create an extra pre-header panel (on top of column header) for column grouping purposes */\r\n  createPreHeaderPanel?: boolean;\r\n\r\n  /** Custom Footer Options */\r\n  customFooterOptions?: CustomFooterOption;\r\n\r\n  /** Data item column value extractor (getter) that can be used by the Excel like copy buffer plugin */\r\n  dataItemColumnValueExtractor?: (item: any, columnDef: Column) => any;\r\n\r\n  /** Data item column value setter that can be used by the Excel like copy buffer plugin */\r\n  dataItemColumnValueSetter?: (item: any, columnDef: Column, value: any) => void;\r\n\r\n  /** Unique property name on the dataset used by Slick.Data.DataView */\r\n  datasetIdPropertyName?: string;\r\n\r\n  /** Some of the SlickGrid DataView options */\r\n  dataView?: {\r\n    /**\r\n     * Defaults to true, when using row selection,\r\n     * if you don't want the items that are not visible (due to being filtered out or being on a different page) to stay selected,\r\n     * then set this property as 'false'. You can also set any of the preserve options instead of a boolean value.\r\n     */\r\n    syncGridSelection?: boolean | { preserveHidden: boolean; preserveHiddenOnSelectionChange: boolean; };\r\n\r\n    /**\r\n     * Defaults to false, do we also want to keep the row selections kept between the pages when using BackendServiceApi?\r\n     * Note that this flag will be skipped if \"syncGridSelection\" is already disabled, both flags are used in conjunction\r\n     */\r\n    syncGridSelectionWithBackendService?: boolean;\r\n  };\r\n\r\n  /** Default column width, is set to 80 when null */\r\n  defaultColumnWidth?: number;\r\n\r\n  /** The default filter model to use when none is specified */\r\n  defaultFilter?: any;\r\n\r\n  /** Default placeholder to use in Filters that support placeholder (autocomplete, input, flatpickr, select, ...) */\r\n  defaultFilterPlaceholder?: string;\r\n\r\n  /** Defaults to 'RangeExclusive', allows to change the default filter range operator */\r\n  defaultFilterRangeOperator?: OperatorString | OperatorType;\r\n\r\n  /** Draggable Grouping Plugin options & events */\r\n  draggableGrouping?: DraggableGrouping;\r\n\r\n  /** Defaults to false, when enabled will give the possibility to edit cell values with inline editors. */\r\n  editable?: boolean;\r\n\r\n  /** option to intercept edit commands and implement undo support. */\r\n  editCommandHandler?: (item: any, column: Column, command: EditCommand) => void;\r\n\r\n  /** Editor classes factory */\r\n  editorFactory?: any;\r\n\r\n  /** a global singleton editor lock. */\r\n  editorLock?: any;\r\n\r\n  /** Do we want to emulate paging when we are scrolling? */\r\n  emulatePagingWhenScrolling?: boolean;\r\n\r\n  /** Defaults to false, which leads to give user possibility to add row to the grid */\r\n  enableAddRow?: boolean;\r\n\r\n  /** Do we want to enable asynchronous (delayed) post rendering */\r\n  enableAsyncPostRender?: boolean;\r\n\r\n  /** Defaults to false, which leads to cleanup after the post render is finished executing */\r\n  enableAsyncPostRenderCleanup?: boolean;\r\n\r\n  /** Defaults to true, which will automatically resize the grid whenever the browser size changes */\r\n  enableAutoResize?: boolean;\r\n\r\n  /** Defaults to true, which will automatically resize the column headers whenever the grid size changes */\r\n  enableAutoSizeColumns?: boolean;\r\n\r\n  /** Defaults to false, which leads to showing tooltip over cell & header values that are not shown completely (... ellipsis) */\r\n  enableAutoTooltip?: boolean;\r\n\r\n  /** Do we want to enable Cell Menu? (Action menu cell click) */\r\n  enableCellMenu?: boolean;\r\n\r\n  /** Defaults to false, which will let user click on cell and navigate with arrow keys. */\r\n  enableCellNavigation?: boolean;\r\n\r\n  /** Defaults to false, when enabled it will add a column for checkbox selection at the 1st column position. A selection will trigger the \"onSelectedRowsChanged\" event. */\r\n  enableCheckboxSelector?: boolean;\r\n\r\n  /** Defaults to true, when enabled will give the possibility to do a right+click on any header title which will open the list of column. User can show/hide a column by using the checkbox from that picker list. */\r\n  enableColumnPicker?: boolean;\r\n\r\n  /** Defaults to true, which permits the user to move an entire column from a position to another. */\r\n  enableColumnReorder?: boolean;\r\n\r\n  /** Do we want to enable Context Menu? (mouse right+click) */\r\n  enableContextMenu?: boolean;\r\n\r\n  /** Defaults to false, do we want to enable the Draggable Grouping Plugin? */\r\n  enableDraggableGrouping?: boolean;\r\n\r\n  /** Defaults to true, which leads to use an Excel like copy buffer that gets copied in clipboard and can be pasted back in Excel or any other app */\r\n  enableExcelCopyBuffer?: boolean;\r\n\r\n  /** Do we want to enable the Excel Export? (if Yes, it will show up in the Grid Menu) */\r\n  enableExcelExport?: boolean;\r\n\r\n  /** Do we want to enable the Export to File? (if Yes, it will show up in the Grid Menu) */\r\n  enableExport?: boolean;\r\n\r\n  /** Do we want to enable Filters? */\r\n  enableFiltering?: boolean;\r\n\r\n  /**\r\n   * Defaults to false, do we want to globally trim white spaces on all filter values typed by the user?\r\n   * User can choose to override the default\r\n   */\r\n  enableFilterTrimWhiteSpace?: boolean;\r\n\r\n  /** Do we want to enable Grid Menu (aka hamburger menu) */\r\n  enableGridMenu?: boolean;\r\n\r\n  /** Defaults to false, do we want to enable the Grouping & Aggregator Plugin? */\r\n  enableGrouping?: boolean;\r\n\r\n  /** Do we want to enable Header Buttons? (buttons with commands that can be shown beside each column)  */\r\n  enableHeaderButton?: boolean;\r\n\r\n  /** Do we want to enable Header Menu? (when hovering a column, a menu will appear for that column) */\r\n  enableHeaderMenu?: boolean;\r\n\r\n  /** Do we want to enable a styling effect when hovering any row from the grid? */\r\n  enableMouseHoverHighlightRow?: boolean;\r\n\r\n  /** Do we want to enable pagination? Currently only works with a Backend Service API */\r\n  enablePagination?: boolean;\r\n\r\n  /** Defaults to false, do we want to enable the Row Detail Plugin? */\r\n  enableRowDetailView?: boolean;\r\n\r\n  /** Defaults to false, when enabled it will make possible to move rows in the grid. */\r\n  enableRowMoveManager?: boolean;\r\n\r\n  /** Do we want to enable row selection? */\r\n  enableRowSelection?: boolean;\r\n\r\n  /** Do we want to enable sorting? */\r\n  enableSorting?: boolean;\r\n\r\n  /** Do we want to enable text selection on cells? Useful when user wants to do copy to clipboard. */\r\n  enableTextSelectionOnCells?: boolean;\r\n\r\n  /** Do we want to enable localization translation (i18n)? */\r\n  enableTranslate?: boolean;\r\n\r\n  /** Options for the ExcelCopyBuffer Extension */\r\n  excelCopyBufferOptions?: ExcelCopyBufferOption;\r\n\r\n  /** Do we want explicit grid initialization? */\r\n  explicitInitialization?: boolean;\r\n\r\n  /** Some default options to set for the Excel export service */\r\n  excelExportOptions?: ExcelExportOption;\r\n\r\n  /** Some default options to set for the export service */\r\n  exportOptions?: ExportOption;\r\n\r\n  /** Defaults to 25, which is the grid footer row panel height */\r\n  footerRowHeight?: number;\r\n\r\n  /** Do we want to force fit columns in the grid at all time? */\r\n  forceFitColumns?: boolean;\r\n\r\n  /** Defaults to false, force synchronous scrolling */\r\n  forceSyncScrolling?: boolean;\r\n\r\n  /** Formatter classes factory */\r\n  formatterFactory?: any;\r\n\r\n  /** Formatter commonly used options defined for the entire grid */\r\n  formatterOptions?: FormatterOption;\r\n\r\n  /** Defaults to false, do we want to freeze (pin) the bottom portion instead of the top */\r\n  frozenBottom?: boolean;\r\n\r\n  /** Number of column(s) to freeze (pin) in the grid */\r\n  frozenColumn?: number;\r\n\r\n  /** Number of row(s) to freeze (pin) in the grid */\r\n  frozenRow?: number;\r\n\r\n  /** Defaults to false, which leads to have row with full width */\r\n  fullWidthRows?: boolean;\r\n\r\n  /** Grid DOM element container ID (used Angular-Slickgrid auto-resizer) */\r\n  gridContainerId?: string;\r\n\r\n  /** Grid Menu options (aka hamburger menu) */\r\n  gridMenu?: GridMenu;\r\n\r\n  /** Grid DOM element ID */\r\n  gridId?: string;\r\n\r\n  /** Header row height in pixels (only type the number). Header row is where the filters are. */\r\n  headerRowHeight?: number;\r\n\r\n  /** Header button options */\r\n  headerButton?: HeaderButton;\r\n\r\n  /** Header menu options */\r\n  headerMenu?: HeaderMenu;\r\n\r\n  /** ngx-translate i18n translation service instance */\r\n  i18n?: TranslateService;\r\n\r\n  /**\r\n   * When using custom Locales (that is when user is NOT using ngx-translate, this property does nothing when used with ngx-translate),\r\n   * This is useful so that every component of the lib knows the locale.\r\n   * For example, not providing this will make the Date Filter/Editor use English by default even if we use different \"locales\",\r\n   * so this basically helps certain elements know which locale is currently used.\r\n   */\r\n  locale?: string;\r\n\r\n  /** Set of Locale translations used by the library */\r\n  locales?: Locale;\r\n\r\n  /** Do we leave space for new rows in the DOM visible buffer */\r\n  leaveSpaceForNewRows?: boolean;\r\n\r\n  /** What is the minimum row buffer to use? */\r\n  minRowBuffer?: number;\r\n\r\n  /** Defaults to false, which leads to be able to do multiple columns sorting (or single sort when false) */\r\n  multiColumnSort?: boolean;\r\n\r\n  /** Defaults to true, which leads to be able to do multiple selection */\r\n  multiSelect?: boolean;\r\n\r\n  /** Defaults to true, which will display numbers indicating column sort precedence are displayed in the columns when multiple columns selected */\r\n  numberedMultiColumnSort?: boolean;\r\n\r\n  /** Pagination options, these are currently used ONLY with a Backend Service API (GraphQL/OData Services) */\r\n  pagination?: Pagination;\r\n\r\n  /** if you want to pass custom paramaters to your Formatter/Editor or anything else */\r\n  params?: any | any[];\r\n\r\n  /** Extra pre-header panel height (on top of column header) */\r\n  preHeaderPanelHeight?: number;\r\n\r\n  /** Do we want to preserve copied selection on paste? */\r\n  preserveCopiedSelectionOnPaste?: boolean;\r\n\r\n  /** Query presets before grid load (filters, sorters, pagination) */\r\n  presets?: GridState;\r\n\r\n  /** Preselect certain rows by their row index (\"enableCheckboxSelector\" must be enabled) */\r\n  preselectedRows?: number[];\r\n\r\n  /** Register 1 or more Slick Plugins */\r\n  registerPlugins?: any | any[];\r\n\r\n  /** Row Detail View Plugin options & events (columnId, cssClass, toolTip, width) */\r\n  rowDetailView?: RowDetailView;\r\n\r\n  /** Grid row height in pixels (only type the number). Row of cell values. */\r\n  rowHeight?: number;\r\n\r\n  /** Row Move Manager Plugin options & events */\r\n  rowMoveManager?: RowMoveManager;\r\n\r\n  /** Row selection options */\r\n  rowSelectionOptions?: {\r\n    /** do we want to select the active row? */\r\n    selectActiveRow: boolean;\r\n  };\r\n\r\n  /**\r\n   * Optionally pass some options to the 3rd party lib \"cure53/DOMPurify\" used in some Filters.\r\n   * For this to work, \"enableRenderHtml\" as to be enabled.\r\n   */\r\n  sanitizeHtmlOptions?: any;\r\n\r\n  /** CSS class name used when cell is selected */\r\n  selectedCellCssClass?: string;\r\n\r\n  /** Do we want to show cell selection? */\r\n  showCellSelection?: boolean;\r\n\r\n  /**\r\n   * Do we want to show a custom footer with some metrics?\r\n   * By default it will show how many items are in the dataset and when was last update done (timestamp)\r\n   * */\r\n  showCustomFooter?: boolean;\r\n\r\n  /** Do we want to show the footer row? */\r\n  showFooterRow?: boolean;\r\n\r\n  /** Do we want to show header row? */\r\n  showHeaderRow?: boolean;\r\n\r\n  /** Do we want to show metrics in custom footer? (dataset length, data filtered, last update timestamp) */\r\n  showFooterMetrics?: boolean;\r\n\r\n  /** Do we want to show the extra pre-header panel (on top of column header) for column grouping purposes */\r\n  showPreHeaderPanel?: boolean;\r\n\r\n  /** Do we want to show top panel row? */\r\n  showTopPanel?: boolean;\r\n\r\n  /** Defaults to true, which leads to render a separate span for the number and styles it with css class <i>slick-sort-indicator-numbered</i> */\r\n  sortColNumberInSeparateSpan?: boolean;\r\n\r\n  /**\r\n   * Defaults to true, which leads to suppress the cell from becoming active when cell as an editor and is clicked.\r\n   * This flag should be enabled especially when mixing these 2 features (Row Selections & Inline Editors)\r\n   */\r\n  suppressActiveCellChangeOnEdit?: boolean;\r\n\r\n  /** Defaults to false, when set to True will sync the column cell resize & apply the column width */\r\n  syncColumnCellResize?: boolean;\r\n\r\n  /** What is the top panel height in pixels (only type the number) */\r\n  topPanelHeight?: number;\r\n\r\n  /** Defaults to false, when set to True will lead to multiple columns sorting without the need to hold or do shift-click to execute a multiple sort. */\r\n  tristateMultiColumnSort?: boolean;\r\n\r\n  /** Defaults to null, which is the default Viewport CSS class name */\r\n  viewportClass?: string;\r\n}\r\n"]}