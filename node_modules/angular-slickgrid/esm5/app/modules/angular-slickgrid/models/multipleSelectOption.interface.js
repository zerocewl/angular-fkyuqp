//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"multipleSelectOption.interface.js","sourceRoot":"ng://angular-slickgrid/","sources":["app/modules/angular-slickgrid/models/multipleSelectOption.interface.ts"],"names":[],"mappings":"","sourcesContent":["export interface MultipleSelectOption {\r\n  /** Add a title. By default this option is set to false. */\r\n  addTitle?: boolean;\r\n\r\n  /** defaults to 20, when using \"autoAdjustDropHeight\" we might want to add a bottom (or top) padding instead of taking the entire available space */\r\n  adjustHeightPadding?: number;\r\n\r\n  /** Use animation, options are ('none', 'fade', 'slide'). By default this option is set to 'none'  */\r\n  animate?: 'none' | 'fade' | 'slide';\r\n\r\n  /** The text displays when the select all selected.By default this option is set to \"All selected\". */\r\n  allSelected?: boolean | string;\r\n\r\n  /** Auto-adjust the Drop menu height to fit with available space */\r\n  autoAdjustDropHeight?: boolean;\r\n\r\n  /** Auto-adjust the Drop position on the side with the most available space (dropup / dropdown) */\r\n  autoAdjustDropPosition?: boolean;\r\n\r\n  /** Drop menu to automatically set same width as the input select element */\r\n  autoDropWidth?: boolean;\r\n\r\n  /** Drop menu to automatically set it's width as the maximum available width of text */\r\n  autoAdjustDropWidthByTextSize?: boolean;\r\n\r\n  /** HTML container to use for the drop menu, e.g. 'body' */\r\n  container?: string;\r\n\r\n  /** `#` is replaced with the count of selected items, `%` is replaces with total items.By default this option is set to # of % selected. */\r\n  countSelected?: string;\r\n\r\n  /** Delimiter to use when display the selected options. By default this option is set to `,` */\r\n  delimiter?: string;\r\n\r\n  /** Display selected values on the element. By default this option is set to false. */\r\n  displayValues?: boolean;\r\n\r\n  /** Defaults to 26 (as per CSS), that is the \"OK\" button element height in pixels inside the drop when using multiple-selection */\r\n  domElmOkButtonHeight?: number;\r\n\r\n  /** Defaults to 26 (as per CSS), that is the select DOM element padding in pixels (that is not the drop but the select itself, how tall is it) */\r\n  domElmSelectSidePadding?: number;\r\n\r\n  /** Defaults to 39 (as per CSS), that is the DOM element of the \"Select All\" text area */\r\n  domElmSelectAllHeight?: number;\r\n\r\n  /** Define the width of the dropdown list */\r\n  dropWidth?: number;\r\n\r\n  /** Add `…` after selected options if minimumCountSelected is set. Overrides countSelected option.By default this option is set to false. */\r\n  ellipsis?: boolean;\r\n\r\n  /** Whether or not Multiple Select show a search field to search through checkbox items.By default this option is set to false. */\r\n  filter?: boolean;\r\n\r\n  /** Accept a filter by typing Enter on the keyboard. By default this option is set to false. */\r\n  filterAcceptOnEnter?: boolean;\r\n\r\n  /** Hide the option groupd checkboses. By default this is set to false. */\r\n  hideOptgroupCheckboxes?: boolean;\r\n\r\n  /** Whether or not Multiple Select open the select dropdown. */\r\n  isOpen?: boolean;\r\n\r\n  /** Keep the select dropdown always open.By default this option is set to false. */\r\n  keepOpen?: boolean;\r\n\r\n  /** Defaults to 250, define the maximum height property of the dropdown list. */\r\n  maxHeight?: number;\r\n\r\n  /** Defaults to 500, define the maximum width of the drop when using the \"autoAdjustDropWidthByTextSize: true\" flag. */\r\n  maxWidth?: number;\r\n\r\n  /** Define the minimum width of the drop when using the \"autoAdjustDropWidthByTextSize: true\" flag. */\r\n  minWidth?: number;\r\n\r\n  /** countSelected will be shown only if more than X items where selected.By default this option is set to 3. */\r\n  minimumCountSelected?: number;\r\n\r\n  /** Whether or not Multiple Select show multiple items in a row.By default this option is set to false. */\r\n  multiple?: boolean;\r\n\r\n  /** Multiple Select show multiple items width.By default this option is set to 80. */\r\n  multipleWidth?: number;\r\n\r\n  /** Provide a name to the multiple select element. By default this option is set to ''. */\r\n  name?: string;\r\n\r\n  /** Text to display when nothing is found. By default the text is \"No matches found\" */\r\n  noMatchesFound?: string;\r\n\r\n  /** Add an offset to the dropdown menu list. By default this option is set to 0. */\r\n  offsetLeft?: number;\r\n\r\n  /** Display the OK button at bottom of the list. By default this is set to false. */\r\n  okButton?: boolean;\r\n\r\n  /** Text to display on the bottom OK button. By default the text is \"OK\" */\r\n  okButtonText?: string;\r\n\r\n  /** A placeholder value can be defined and will be displayed until you select a item. */\r\n  placeholder?: string;\r\n\r\n  /** Defines the position of select dropdown, can only be bottom or top.By default this option is set to bottom. */\r\n  position?: string;\r\n\r\n  /** Whether or not Multiple Select show select all checkbox. */\r\n  selectAll?: boolean;\r\n\r\n  /** Multiple Select select all checkbox delimiter. By default this option is set to ['[',']']. */\r\n  selectAllDelimiter?: string[];\r\n\r\n  /** Multiple Select select all checkbox text. By default this option is set to \"Select all\" */\r\n  selectAllText?: string;\r\n\r\n  /** Whether or not Multiple Select allows you to select only one option.By default this option is set to false. */\r\n  single?: boolean;\r\n\r\n  /** Defaults to false, when set to True it will use the \"title\" that were defined in each select option */\r\n  useSelectOptionTitle?: boolean;\r\n\r\n  /** Defaults to False, when set to True it will use the <option label=\"\"> that can be used to display selected options */\r\n  useSelectOptionLabel?: boolean;\r\n\r\n  /** Defaults to False, same as \"useSelectOptionLabel\" but will also render html */\r\n  useSelectOptionLabelToHtml?: boolean;\r\n\r\n  /** Define the width property of the dropdown list, support a percentage setting.By default this option is set to undefined. Which is the same as the select input field. */\r\n  width?: number | string;\r\n\r\n  // --\r\n  // Methods\r\n  // ------------\r\n\r\n  /** Blur the multiple select. */\r\n  blur?: () => void;\r\n\r\n  /** Enables Select. */\r\n  enable?: () => void;\r\n\r\n  /** Focus the multiple select. */\r\n  focus?: () => void;\r\n\r\n  /** Disables Select. During this mode the user is not allowed to manipulate the selection. */\r\n  disable?: () => void;\r\n\r\n  /** Check all checkboxes. */\r\n  checkAll?: () => void;\r\n\r\n  /** Uncheck all checkboxes. */\r\n  uncheckAll?: () => void;\r\n\r\n  /** Reloads the Multiple Select. If you’re dynamically adding/removing option tags on the original select via AJAX or DOM manipulation methods, call refresh to reflect the changes. */\r\n  refresh?: () => void;\r\n\r\n  /** Gets the selected values. */\r\n  getSelects?: () => string | string[];\r\n\r\n  /** Sets the selected values. */\r\n  setSelects?: (value: string | string[]) => void;\r\n\r\n  /** The item styler function, return style string to custom the item style such as background: red. The function take one parameter: value. */\r\n  styler?: (value: string) => void;\r\n\r\n  /** Returns HTML label attribute of a DOM element */\r\n  labelTemplate?: (elm: any) => any;\r\n\r\n  /** Returns HTML text template of a DOM element */\r\n  textTemplate?: (elm: any) => any;\r\n\r\n  // --\r\n  // Events\r\n  // ------------\r\n\r\n  /** Fires when the dropdown list is open. */\r\n  onOpen?: () => void;\r\n\r\n  /** Fires when the dropdown list is close. */\r\n  onClose?: () => void;\r\n\r\n  /** Fires when all the options are checked by either clicking the `Select all` checkbox, or when the `checkall` method is programatically called. */\r\n  onCheckAll?: () => void;\r\n\r\n  /** Fires when all the options are unchecked by either clicking the `Select all` checkbox, or when the `uncheckall` method is programatically called. */\r\n  onUncheckAll?: () => void;\r\n\r\n  /** Bind an event handler to the “focus”. */\r\n  onFocus?: () => void;\r\n\r\n  /** Bind an event handler to the “blur” */\r\n  onBlur?: () => void;\r\n\r\n  /** Fires when a an optgroup label is clicked on. */\r\n  onOptgroupClick?: (view: MultipleSelectView) => void;\r\n\r\n  /** Fires when a checkbox is checked or unchecked. */\r\n  onClick?: (view: MultipleSelectView) => void;\r\n\r\n  /** Fires when a checkbox filter is changed. */\r\n  onFilter?: () => void;\r\n}\r\n\r\nexport interface MultipleSelectView {\r\n  label: string;\r\n  value: any;\r\n  checked: boolean;\r\n  instance: any;\r\n}\r\n"]}