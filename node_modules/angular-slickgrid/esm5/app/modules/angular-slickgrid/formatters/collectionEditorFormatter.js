import { arrayToCsvFormatter } from './arrayToCsvFormatter';
import { findOrDefault } from '../services/utilities';
/**
 * A formatter to show the label property value of an editor collection
 */
export var collectionEditorFormatter = function (row, cell, value, columnDef, dataContext) {
    if (!value || !columnDef || !columnDef.internalColumnEditor || !columnDef.internalColumnEditor.collection
        || !columnDef.internalColumnEditor.collection.length) {
        return value;
    }
    var internalColumnEditor = columnDef.internalColumnEditor, collection = columnDef.internalColumnEditor.collection;
    var labelName = (internalColumnEditor.customStructure) ? internalColumnEditor.customStructure.label : 'label';
    var valueName = (internalColumnEditor.customStructure) ? internalColumnEditor.customStructure.value : 'value';
    if (Array.isArray(value)) {
        if (collection.every(function (x) { return typeof x === 'string'; })) {
            return arrayToCsvFormatter(row, cell, value.map(function (v) { return findOrDefault(collection, function (c) { return c === v; }); }), columnDef, dataContext);
        }
        else {
            return arrayToCsvFormatter(row, cell, value.map(function (v) { return findOrDefault(collection, function (c) { return c[valueName] === v; })[labelName]; }), columnDef, dataContext);
        }
    }
    return findOrDefault(collection, function (c) { return c[valueName] === value; })[labelName] || '';
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sbGVjdGlvbkVkaXRvckZvcm1hdHRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItc2xpY2tncmlkLyIsInNvdXJjZXMiOlsiYXBwL21vZHVsZXMvYW5ndWxhci1zbGlja2dyaWQvZm9ybWF0dGVycy9jb2xsZWN0aW9uRWRpdG9yRm9ybWF0dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRTVELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUV0RDs7R0FFRztBQUNILE1BQU0sQ0FBQyxJQUFNLHlCQUF5QixHQUFjLFVBQUMsR0FBVyxFQUFFLElBQVksRUFBRSxLQUFVLEVBQUUsU0FBaUIsRUFBRSxXQUFnQjtJQUM3SCxJQUFJLENBQUMsS0FBSyxJQUFJLENBQUMsU0FBUyxJQUFJLENBQUMsU0FBUyxDQUFDLG9CQUFvQixJQUFJLENBQUMsU0FBUyxDQUFDLG9CQUFvQixDQUFDLFVBQVU7V0FDcEcsQ0FBQyxTQUFTLENBQUMsb0JBQW9CLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRTtRQUN0RCxPQUFPLEtBQUssQ0FBQztLQUNkO0lBRU8sSUFBQSxxREFBb0IsRUFBMEIsc0RBQVUsQ0FBaUI7SUFDakYsSUFBTSxTQUFTLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUMsb0JBQW9CLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDO0lBQ2hILElBQU0sU0FBUyxHQUFHLENBQUMsb0JBQW9CLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDLG9CQUFvQixDQUFDLGVBQWUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQztJQUVoSCxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7UUFDeEIsSUFBSSxVQUFVLENBQUMsS0FBSyxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsT0FBTyxDQUFDLEtBQUssUUFBUSxFQUFyQixDQUFxQixDQUFDLEVBQUU7WUFDaEQsT0FBTyxtQkFBbUIsQ0FBQyxHQUFHLEVBQzVCLElBQUksRUFDSixLQUFLLENBQUMsR0FBRyxDQUFDLFVBQUMsQ0FBTSxJQUFLLE9BQUEsYUFBYSxDQUFDLFVBQVUsRUFBRSxVQUFDLENBQU0sSUFBSyxPQUFBLENBQUMsS0FBSyxDQUFDLEVBQVAsQ0FBTyxDQUFDLEVBQTlDLENBQThDLENBQUMsRUFDckUsU0FBUyxFQUNULFdBQVcsQ0FBQyxDQUFDO1NBQ2hCO2FBQU07WUFDTCxPQUFPLG1CQUFtQixDQUFDLEdBQUcsRUFDNUIsSUFBSSxFQUNKLEtBQUssQ0FBQyxHQUFHLENBQUMsVUFBQyxDQUFNLElBQUssT0FBQSxhQUFhLENBQUMsVUFBVSxFQUFFLFVBQUMsQ0FBTSxJQUFLLE9BQUEsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsRUFBbEIsQ0FBa0IsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxFQUFwRSxDQUFvRSxDQUFDLEVBQzNGLFNBQVMsRUFDVCxXQUFXLENBQUMsQ0FBQztTQUNoQjtLQUNGO0lBRUQsT0FBTyxhQUFhLENBQUMsVUFBVSxFQUFFLFVBQUMsQ0FBTSxJQUFLLE9BQUEsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxLQUFLLEtBQUssRUFBdEIsQ0FBc0IsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUN4RixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhcnJheVRvQ3N2Rm9ybWF0dGVyIH0gZnJvbSAnLi9hcnJheVRvQ3N2Rm9ybWF0dGVyJztcclxuaW1wb3J0IHsgQ29sdW1uLCBGb3JtYXR0ZXIgfSBmcm9tICcuLy4uL21vZGVscy9pbmRleCc7XHJcbmltcG9ydCB7IGZpbmRPckRlZmF1bHQgfSBmcm9tICcuLi9zZXJ2aWNlcy91dGlsaXRpZXMnO1xyXG5cclxuLyoqXHJcbiAqIEEgZm9ybWF0dGVyIHRvIHNob3cgdGhlIGxhYmVsIHByb3BlcnR5IHZhbHVlIG9mIGFuIGVkaXRvciBjb2xsZWN0aW9uXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgY29sbGVjdGlvbkVkaXRvckZvcm1hdHRlcjogRm9ybWF0dGVyID0gKHJvdzogbnVtYmVyLCBjZWxsOiBudW1iZXIsIHZhbHVlOiBhbnksIGNvbHVtbkRlZjogQ29sdW1uLCBkYXRhQ29udGV4dDogYW55KSA9PiB7XHJcbiAgaWYgKCF2YWx1ZSB8fCAhY29sdW1uRGVmIHx8ICFjb2x1bW5EZWYuaW50ZXJuYWxDb2x1bW5FZGl0b3IgfHwgIWNvbHVtbkRlZi5pbnRlcm5hbENvbHVtbkVkaXRvci5jb2xsZWN0aW9uXHJcbiAgICB8fCAhY29sdW1uRGVmLmludGVybmFsQ29sdW1uRWRpdG9yLmNvbGxlY3Rpb24ubGVuZ3RoKSB7XHJcbiAgICByZXR1cm4gdmFsdWU7XHJcbiAgfVxyXG5cclxuICBjb25zdCB7IGludGVybmFsQ29sdW1uRWRpdG9yLCBpbnRlcm5hbENvbHVtbkVkaXRvcjogeyBjb2xsZWN0aW9uIH0gfSA9IGNvbHVtbkRlZjtcclxuICBjb25zdCBsYWJlbE5hbWUgPSAoaW50ZXJuYWxDb2x1bW5FZGl0b3IuY3VzdG9tU3RydWN0dXJlKSA/IGludGVybmFsQ29sdW1uRWRpdG9yLmN1c3RvbVN0cnVjdHVyZS5sYWJlbCA6ICdsYWJlbCc7XHJcbiAgY29uc3QgdmFsdWVOYW1lID0gKGludGVybmFsQ29sdW1uRWRpdG9yLmN1c3RvbVN0cnVjdHVyZSkgPyBpbnRlcm5hbENvbHVtbkVkaXRvci5jdXN0b21TdHJ1Y3R1cmUudmFsdWUgOiAndmFsdWUnO1xyXG5cclxuICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcclxuICAgIGlmIChjb2xsZWN0aW9uLmV2ZXJ5KHggPT4gdHlwZW9mIHggPT09ICdzdHJpbmcnKSkge1xyXG4gICAgICByZXR1cm4gYXJyYXlUb0NzdkZvcm1hdHRlcihyb3csXHJcbiAgICAgICAgY2VsbCxcclxuICAgICAgICB2YWx1ZS5tYXAoKHY6IGFueSkgPT4gZmluZE9yRGVmYXVsdChjb2xsZWN0aW9uLCAoYzogYW55KSA9PiBjID09PSB2KSksXHJcbiAgICAgICAgY29sdW1uRGVmLFxyXG4gICAgICAgIGRhdGFDb250ZXh0KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiBhcnJheVRvQ3N2Rm9ybWF0dGVyKHJvdyxcclxuICAgICAgICBjZWxsLFxyXG4gICAgICAgIHZhbHVlLm1hcCgodjogYW55KSA9PiBmaW5kT3JEZWZhdWx0KGNvbGxlY3Rpb24sIChjOiBhbnkpID0+IGNbdmFsdWVOYW1lXSA9PT0gdilbbGFiZWxOYW1lXSksXHJcbiAgICAgICAgY29sdW1uRGVmLFxyXG4gICAgICAgIGRhdGFDb250ZXh0KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiBmaW5kT3JEZWZhdWx0KGNvbGxlY3Rpb24sIChjOiBhbnkpID0+IGNbdmFsdWVOYW1lXSA9PT0gdmFsdWUpW2xhYmVsTmFtZV0gfHwgJyc7XHJcbn07XHJcbiJdfQ==