/** Takes a boolean value, cast it to upperCase string and finally translates it with the "ngx-translate" service */
export var translateBooleanFormatter = function (row, cell, value, columnDef, dataContext, grid) {
    var gridOptions = (grid && typeof grid.getOptions === 'function') ? grid.getOptions() : {};
    var translate = gridOptions.i18n || (columnDef && columnDef.params && columnDef.params.i18n);
    if (!translate || typeof translate.instant !== 'function') {
        throw new Error("The translate formatter requires the \"ngx-translate\" Service to be provided as a Grid Options or Column Definition \"i18n\".\n    For example: this.gridOptions = { enableTranslate: true, i18n: this.translate }");
    }
    // make sure the value is a string (for example a boolean value would throw an error)
    if (value !== undefined && value !== null && typeof value !== 'string') {
        value = value + '';
    }
    return value ? translate.instant(value.toUpperCase()) : '';
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRlQm9vbGVhbkZvcm1hdHRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItc2xpY2tncmlkLyIsInNvdXJjZXMiOlsiYXBwL21vZHVsZXMvYW5ndWxhci1zbGlja2dyaWQvZm9ybWF0dGVycy90cmFuc2xhdGVCb29sZWFuRm9ybWF0dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLG9IQUFvSDtBQUNwSCxNQUFNLENBQUMsSUFBTSx5QkFBeUIsR0FBYyxVQUFDLEdBQVcsRUFBRSxJQUFZLEVBQUUsS0FBVSxFQUFFLFNBQWlCLEVBQUUsV0FBZ0IsRUFBRSxJQUFTO0lBQ3hJLElBQU0sV0FBVyxHQUFHLENBQUMsSUFBSSxJQUFJLE9BQU8sSUFBSSxDQUFDLFVBQVUsS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDN0YsSUFBTSxTQUFTLEdBQUcsV0FBVyxDQUFDLElBQUksSUFBSSxDQUFDLFNBQVMsSUFBSSxTQUFTLENBQUMsTUFBTSxJQUFJLFNBQVMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFL0YsSUFBSSxDQUFDLFNBQVMsSUFBSSxPQUFPLFNBQVMsQ0FBQyxPQUFPLEtBQUssVUFBVSxFQUFFO1FBQ3pELE1BQU0sSUFBSSxLQUFLLENBQUMscU5BQ2dFLENBQUMsQ0FBQztLQUNuRjtJQUVELHFGQUFxRjtJQUNyRixJQUFJLEtBQUssS0FBSyxTQUFTLElBQUksS0FBSyxLQUFLLElBQUksSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQUU7UUFDdEUsS0FBSyxHQUFHLEtBQUssR0FBRyxFQUFFLENBQUM7S0FDcEI7SUFDRCxPQUFPLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0FBQ3ZFLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbHVtbiwgRm9ybWF0dGVyIH0gZnJvbSAnLi8uLi9tb2RlbHMvaW5kZXgnO1xyXG5cclxuLyoqIFRha2VzIGEgYm9vbGVhbiB2YWx1ZSwgY2FzdCBpdCB0byB1cHBlckNhc2Ugc3RyaW5nIGFuZCBmaW5hbGx5IHRyYW5zbGF0ZXMgaXQgd2l0aCB0aGUgXCJuZ3gtdHJhbnNsYXRlXCIgc2VydmljZSAqL1xyXG5leHBvcnQgY29uc3QgdHJhbnNsYXRlQm9vbGVhbkZvcm1hdHRlcjogRm9ybWF0dGVyID0gKHJvdzogbnVtYmVyLCBjZWxsOiBudW1iZXIsIHZhbHVlOiBhbnksIGNvbHVtbkRlZjogQ29sdW1uLCBkYXRhQ29udGV4dDogYW55LCBncmlkOiBhbnkpID0+IHtcclxuICBjb25zdCBncmlkT3B0aW9ucyA9IChncmlkICYmIHR5cGVvZiBncmlkLmdldE9wdGlvbnMgPT09ICdmdW5jdGlvbicpID8gZ3JpZC5nZXRPcHRpb25zKCkgOiB7fTtcclxuICBjb25zdCB0cmFuc2xhdGUgPSBncmlkT3B0aW9ucy5pMThuIHx8IChjb2x1bW5EZWYgJiYgY29sdW1uRGVmLnBhcmFtcyAmJiBjb2x1bW5EZWYucGFyYW1zLmkxOG4pO1xyXG5cclxuICBpZiAoIXRyYW5zbGF0ZSB8fCB0eXBlb2YgdHJhbnNsYXRlLmluc3RhbnQgIT09ICdmdW5jdGlvbicpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcihgVGhlIHRyYW5zbGF0ZSBmb3JtYXR0ZXIgcmVxdWlyZXMgdGhlIFwibmd4LXRyYW5zbGF0ZVwiIFNlcnZpY2UgdG8gYmUgcHJvdmlkZWQgYXMgYSBHcmlkIE9wdGlvbnMgb3IgQ29sdW1uIERlZmluaXRpb24gXCJpMThuXCIuXHJcbiAgICBGb3IgZXhhbXBsZTogdGhpcy5ncmlkT3B0aW9ucyA9IHsgZW5hYmxlVHJhbnNsYXRlOiB0cnVlLCBpMThuOiB0aGlzLnRyYW5zbGF0ZSB9YCk7XHJcbiAgfVxyXG5cclxuICAvLyBtYWtlIHN1cmUgdGhlIHZhbHVlIGlzIGEgc3RyaW5nIChmb3IgZXhhbXBsZSBhIGJvb2xlYW4gdmFsdWUgd291bGQgdGhyb3cgYW4gZXJyb3IpXHJcbiAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQgJiYgdmFsdWUgIT09IG51bGwgJiYgdHlwZW9mIHZhbHVlICE9PSAnc3RyaW5nJykge1xyXG4gICAgdmFsdWUgPSB2YWx1ZSArICcnO1xyXG4gIH1cclxuICByZXR1cm4gdmFsdWUgPyB0cmFuc2xhdGUuaW5zdGFudCh2YWx1ZS50b1VwcGVyQ2FzZSgpIGFzIHN0cmluZykgOiAnJztcclxufTtcclxuIl19