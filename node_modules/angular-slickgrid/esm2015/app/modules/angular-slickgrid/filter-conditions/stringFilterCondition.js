import { testFilterCondition } from './filterUtilities';
export const stringFilterCondition = (options) => {
    // make sure the cell value is a string by casting it when possible
    options.cellValue = (options.cellValue === undefined || options.cellValue === null) ? '' : options.cellValue.toString();
    // make both the cell value and search value lower for case insensitive comparison
    const cellValue = options.cellValue.toLowerCase();
    let searchTerm = (Array.isArray(options.searchTerms) && options.searchTerms[0]) || '';
    if (typeof searchTerm === 'string') {
        searchTerm = searchTerm.toLowerCase();
    }
    if (options.operator === '*' || options.operator === 'EndsWith') {
        return cellValue.endsWith(searchTerm);
    }
    else if ((options.operator === '' && options.cellValueLastChar === '*') || options.operator === 'StartsWith') {
        return cellValue.startsWith(searchTerm);
    }
    else if (options.operator === '') {
        return (cellValue.indexOf(searchTerm) > -1);
    }
    return testFilterCondition(options.operator || '==', cellValue, searchTerm);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaW5nRmlsdGVyQ29uZGl0aW9uLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1zbGlja2dyaWQvIiwic291cmNlcyI6WyJhcHAvbW9kdWxlcy9hbmd1bGFyLXNsaWNrZ3JpZC9maWx0ZXItY29uZGl0aW9ucy9zdHJpbmdGaWx0ZXJDb25kaXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFeEQsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQW9CLENBQUMsT0FBOEIsRUFBRSxFQUFFO0lBQ3ZGLG1FQUFtRTtJQUNuRSxPQUFPLENBQUMsU0FBUyxHQUFHLENBQUMsT0FBTyxDQUFDLFNBQVMsS0FBSyxTQUFTLElBQUksT0FBTyxDQUFDLFNBQVMsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBRXhILGtGQUFrRjtJQUNsRixNQUFNLFNBQVMsR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ2xELElBQUksVUFBVSxHQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLElBQUksT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN0RixJQUFJLE9BQU8sVUFBVSxLQUFLLFFBQVEsRUFBRTtRQUNsQyxVQUFVLEdBQUcsVUFBVSxDQUFDLFdBQVcsRUFBRSxDQUFDO0tBQ3ZDO0lBRUQsSUFBSSxPQUFPLENBQUMsUUFBUSxLQUFLLEdBQUcsSUFBSSxPQUFPLENBQUMsUUFBUSxLQUFLLFVBQVUsRUFBRTtRQUMvRCxPQUFPLFNBQVMsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUM7S0FDdkM7U0FBTSxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsS0FBSyxFQUFFLElBQUksT0FBTyxDQUFDLGlCQUFpQixLQUFLLEdBQUcsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxRQUFRLEtBQUssWUFBWSxFQUFFO1FBQzlHLE9BQU8sU0FBUyxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQztLQUN6QztTQUFNLElBQUksT0FBTyxDQUFDLFFBQVEsS0FBSyxFQUFFLEVBQUU7UUFDbEMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM3QztJQUNELE9BQU8sbUJBQW1CLENBQUMsT0FBTyxDQUFDLFFBQVEsSUFBSSxJQUFJLEVBQUUsU0FBUyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0FBQzlFLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZpbHRlckNvbmRpdGlvbiwgRmlsdGVyQ29uZGl0aW9uT3B0aW9uIH0gZnJvbSAnLi4vbW9kZWxzL2luZGV4JztcclxuaW1wb3J0IHsgdGVzdEZpbHRlckNvbmRpdGlvbiB9IGZyb20gJy4vZmlsdGVyVXRpbGl0aWVzJztcclxuXHJcbmV4cG9ydCBjb25zdCBzdHJpbmdGaWx0ZXJDb25kaXRpb246IEZpbHRlckNvbmRpdGlvbiA9IChvcHRpb25zOiBGaWx0ZXJDb25kaXRpb25PcHRpb24pID0+IHtcclxuICAvLyBtYWtlIHN1cmUgdGhlIGNlbGwgdmFsdWUgaXMgYSBzdHJpbmcgYnkgY2FzdGluZyBpdCB3aGVuIHBvc3NpYmxlXHJcbiAgb3B0aW9ucy5jZWxsVmFsdWUgPSAob3B0aW9ucy5jZWxsVmFsdWUgPT09IHVuZGVmaW5lZCB8fCBvcHRpb25zLmNlbGxWYWx1ZSA9PT0gbnVsbCkgPyAnJyA6IG9wdGlvbnMuY2VsbFZhbHVlLnRvU3RyaW5nKCk7XHJcblxyXG4gIC8vIG1ha2UgYm90aCB0aGUgY2VsbCB2YWx1ZSBhbmQgc2VhcmNoIHZhbHVlIGxvd2VyIGZvciBjYXNlIGluc2Vuc2l0aXZlIGNvbXBhcmlzb25cclxuICBjb25zdCBjZWxsVmFsdWUgPSBvcHRpb25zLmNlbGxWYWx1ZS50b0xvd2VyQ2FzZSgpO1xyXG4gIGxldCBzZWFyY2hUZXJtID0gKEFycmF5LmlzQXJyYXkob3B0aW9ucy5zZWFyY2hUZXJtcykgJiYgb3B0aW9ucy5zZWFyY2hUZXJtc1swXSkgfHwgJyc7XHJcbiAgaWYgKHR5cGVvZiBzZWFyY2hUZXJtID09PSAnc3RyaW5nJykge1xyXG4gICAgc2VhcmNoVGVybSA9IHNlYXJjaFRlcm0udG9Mb3dlckNhc2UoKTtcclxuICB9XHJcblxyXG4gIGlmIChvcHRpb25zLm9wZXJhdG9yID09PSAnKicgfHwgb3B0aW9ucy5vcGVyYXRvciA9PT0gJ0VuZHNXaXRoJykge1xyXG4gICAgcmV0dXJuIGNlbGxWYWx1ZS5lbmRzV2l0aChzZWFyY2hUZXJtKTtcclxuICB9IGVsc2UgaWYgKChvcHRpb25zLm9wZXJhdG9yID09PSAnJyAmJiBvcHRpb25zLmNlbGxWYWx1ZUxhc3RDaGFyID09PSAnKicpIHx8IG9wdGlvbnMub3BlcmF0b3IgPT09ICdTdGFydHNXaXRoJykge1xyXG4gICAgcmV0dXJuIGNlbGxWYWx1ZS5zdGFydHNXaXRoKHNlYXJjaFRlcm0pO1xyXG4gIH0gZWxzZSBpZiAob3B0aW9ucy5vcGVyYXRvciA9PT0gJycpIHtcclxuICAgIHJldHVybiAoY2VsbFZhbHVlLmluZGV4T2Yoc2VhcmNoVGVybSkgPiAtMSk7XHJcbiAgfVxyXG4gIHJldHVybiB0ZXN0RmlsdGVyQ29uZGl0aW9uKG9wdGlvbnMub3BlcmF0b3IgfHwgJz09JywgY2VsbFZhbHVlLCBzZWFyY2hUZXJtKTtcclxufTtcclxuIl19