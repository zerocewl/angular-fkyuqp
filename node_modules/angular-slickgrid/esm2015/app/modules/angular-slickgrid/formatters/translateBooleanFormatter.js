/** Takes a boolean value, cast it to upperCase string and finally translates it with the "ngx-translate" service */
export const translateBooleanFormatter = (row, cell, value, columnDef, dataContext, grid) => {
    const gridOptions = (grid && typeof grid.getOptions === 'function') ? grid.getOptions() : {};
    const translate = gridOptions.i18n || (columnDef && columnDef.params && columnDef.params.i18n);
    if (!translate || typeof translate.instant !== 'function') {
        throw new Error(`The translate formatter requires the "ngx-translate" Service to be provided as a Grid Options or Column Definition "i18n".
    For example: this.gridOptions = { enableTranslate: true, i18n: this.translate }`);
    }
    // make sure the value is a string (for example a boolean value would throw an error)
    if (value !== undefined && value !== null && typeof value !== 'string') {
        value = value + '';
    }
    return value ? translate.instant(value.toUpperCase()) : '';
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRlQm9vbGVhbkZvcm1hdHRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItc2xpY2tncmlkLyIsInNvdXJjZXMiOlsiYXBwL21vZHVsZXMvYW5ndWxhci1zbGlja2dyaWQvZm9ybWF0dGVycy90cmFuc2xhdGVCb29sZWFuRm9ybWF0dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLG9IQUFvSDtBQUNwSCxNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBYyxDQUFDLEdBQVcsRUFBRSxJQUFZLEVBQUUsS0FBVSxFQUFFLFNBQWlCLEVBQUUsV0FBZ0IsRUFBRSxJQUFTLEVBQUUsRUFBRTtJQUM1SSxNQUFNLFdBQVcsR0FBRyxDQUFDLElBQUksSUFBSSxPQUFPLElBQUksQ0FBQyxVQUFVLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQzdGLE1BQU0sU0FBUyxHQUFHLFdBQVcsQ0FBQyxJQUFJLElBQUksQ0FBQyxTQUFTLElBQUksU0FBUyxDQUFDLE1BQU0sSUFBSSxTQUFTLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRS9GLElBQUksQ0FBQyxTQUFTLElBQUksT0FBTyxTQUFTLENBQUMsT0FBTyxLQUFLLFVBQVUsRUFBRTtRQUN6RCxNQUFNLElBQUksS0FBSyxDQUFDO29GQUNnRSxDQUFDLENBQUM7S0FDbkY7SUFFRCxxRkFBcUY7SUFDckYsSUFBSSxLQUFLLEtBQUssU0FBUyxJQUFJLEtBQUssS0FBSyxJQUFJLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxFQUFFO1FBQ3RFLEtBQUssR0FBRyxLQUFLLEdBQUcsRUFBRSxDQUFDO0tBQ3BCO0lBQ0QsT0FBTyxLQUFLLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztBQUN2RSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb2x1bW4sIEZvcm1hdHRlciB9IGZyb20gJy4vLi4vbW9kZWxzL2luZGV4JztcclxuXHJcbi8qKiBUYWtlcyBhIGJvb2xlYW4gdmFsdWUsIGNhc3QgaXQgdG8gdXBwZXJDYXNlIHN0cmluZyBhbmQgZmluYWxseSB0cmFuc2xhdGVzIGl0IHdpdGggdGhlIFwibmd4LXRyYW5zbGF0ZVwiIHNlcnZpY2UgKi9cclxuZXhwb3J0IGNvbnN0IHRyYW5zbGF0ZUJvb2xlYW5Gb3JtYXR0ZXI6IEZvcm1hdHRlciA9IChyb3c6IG51bWJlciwgY2VsbDogbnVtYmVyLCB2YWx1ZTogYW55LCBjb2x1bW5EZWY6IENvbHVtbiwgZGF0YUNvbnRleHQ6IGFueSwgZ3JpZDogYW55KSA9PiB7XHJcbiAgY29uc3QgZ3JpZE9wdGlvbnMgPSAoZ3JpZCAmJiB0eXBlb2YgZ3JpZC5nZXRPcHRpb25zID09PSAnZnVuY3Rpb24nKSA/IGdyaWQuZ2V0T3B0aW9ucygpIDoge307XHJcbiAgY29uc3QgdHJhbnNsYXRlID0gZ3JpZE9wdGlvbnMuaTE4biB8fCAoY29sdW1uRGVmICYmIGNvbHVtbkRlZi5wYXJhbXMgJiYgY29sdW1uRGVmLnBhcmFtcy5pMThuKTtcclxuXHJcbiAgaWYgKCF0cmFuc2xhdGUgfHwgdHlwZW9mIHRyYW5zbGF0ZS5pbnN0YW50ICE9PSAnZnVuY3Rpb24nKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFRoZSB0cmFuc2xhdGUgZm9ybWF0dGVyIHJlcXVpcmVzIHRoZSBcIm5neC10cmFuc2xhdGVcIiBTZXJ2aWNlIHRvIGJlIHByb3ZpZGVkIGFzIGEgR3JpZCBPcHRpb25zIG9yIENvbHVtbiBEZWZpbml0aW9uIFwiaTE4blwiLlxyXG4gICAgRm9yIGV4YW1wbGU6IHRoaXMuZ3JpZE9wdGlvbnMgPSB7IGVuYWJsZVRyYW5zbGF0ZTogdHJ1ZSwgaTE4bjogdGhpcy50cmFuc2xhdGUgfWApO1xyXG4gIH1cclxuXHJcbiAgLy8gbWFrZSBzdXJlIHRoZSB2YWx1ZSBpcyBhIHN0cmluZyAoZm9yIGV4YW1wbGUgYSBib29sZWFuIHZhbHVlIHdvdWxkIHRocm93IGFuIGVycm9yKVxyXG4gIGlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkICYmIHZhbHVlICE9PSBudWxsICYmIHR5cGVvZiB2YWx1ZSAhPT0gJ3N0cmluZycpIHtcclxuICAgIHZhbHVlID0gdmFsdWUgKyAnJztcclxuICB9XHJcbiAgcmV0dXJuIHZhbHVlID8gdHJhbnNsYXRlLmluc3RhbnQodmFsdWUudG9VcHBlckNhc2UoKSBhcyBzdHJpbmcpIDogJyc7XHJcbn07XHJcbiJdfQ==