export const progressBarFormatter = (row, cell, value, columnDef, dataContext) => {
    const isNumber = (value === null || value === undefined || value === '') ? false : !isNaN(+value);
    if (!isNumber) {
        return '';
    }
    let color = '';
    let inputNumber = parseFloat(value);
    if (inputNumber > 100) {
        inputNumber = 100;
    }
    if (inputNumber < 30) {
        color = 'danger';
    }
    else if (inputNumber < 70) {
        color = 'warning';
    }
    else {
        color = 'success';
    }
    const output = `<div class="progress">
    <div class="progress-bar progress-bar-${color} bg-${color}" role="progressbar" aria-valuenow="${inputNumber}" aria-valuemin="0" aria-valuemax="100" style="min-width: 2em; width: ${inputNumber}%;">
    ${inputNumber}%
    </div>
  </div>`;
    return output.replace(/\s{2,}/g, ' ').trim();
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3NCYXJGb3JtYXR0ZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLXNsaWNrZ3JpZC8iLCJzb3VyY2VzIjpbImFwcC9tb2R1bGVzL2FuZ3VsYXItc2xpY2tncmlkL2Zvcm1hdHRlcnMvcHJvZ3Jlc3NCYXJGb3JtYXR0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQWMsQ0FBQyxHQUFXLEVBQUUsSUFBWSxFQUFFLEtBQVUsRUFBRSxTQUFpQixFQUFFLFdBQWdCLEVBQVUsRUFBRTtJQUNwSSxNQUFNLFFBQVEsR0FBRyxDQUFDLEtBQUssS0FBSyxJQUFJLElBQUksS0FBSyxLQUFLLFNBQVMsSUFBSSxLQUFLLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNsRyxJQUFJLENBQUMsUUFBUSxFQUFFO1FBQ2IsT0FBTyxFQUFFLENBQUM7S0FDWDtJQUVELElBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQztJQUNmLElBQUksV0FBVyxHQUFHLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNwQyxJQUFJLFdBQVcsR0FBRyxHQUFHLEVBQUU7UUFDckIsV0FBVyxHQUFHLEdBQUcsQ0FBQztLQUNuQjtJQUVELElBQUksV0FBVyxHQUFHLEVBQUUsRUFBRTtRQUNwQixLQUFLLEdBQUcsUUFBUSxDQUFDO0tBQ2xCO1NBQU0sSUFBSSxXQUFXLEdBQUcsRUFBRSxFQUFFO1FBQzNCLEtBQUssR0FBRyxTQUFTLENBQUM7S0FDbkI7U0FBTTtRQUNMLEtBQUssR0FBRyxTQUFTLENBQUM7S0FDbkI7SUFFRCxNQUFNLE1BQU0sR0FBRzs0Q0FDMkIsS0FBSyxPQUFPLEtBQUssdUNBQXVDLFdBQVcseUVBQXlFLFdBQVc7TUFDN0wsV0FBVzs7U0FFUixDQUFDO0lBRVIsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUMvQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb2x1bW4gfSBmcm9tICcuLy4uL21vZGVscy9jb2x1bW4uaW50ZXJmYWNlJztcclxuaW1wb3J0IHsgRm9ybWF0dGVyIH0gZnJvbSAnLi8uLi9tb2RlbHMvZm9ybWF0dGVyLmludGVyZmFjZSc7XHJcblxyXG5leHBvcnQgY29uc3QgcHJvZ3Jlc3NCYXJGb3JtYXR0ZXI6IEZvcm1hdHRlciA9IChyb3c6IG51bWJlciwgY2VsbDogbnVtYmVyLCB2YWx1ZTogYW55LCBjb2x1bW5EZWY6IENvbHVtbiwgZGF0YUNvbnRleHQ6IGFueSk6IHN0cmluZyA9PiB7XHJcbiAgY29uc3QgaXNOdW1iZXIgPSAodmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCB8fCB2YWx1ZSA9PT0gJycpID8gZmFsc2UgOiAhaXNOYU4oK3ZhbHVlKTtcclxuICBpZiAoIWlzTnVtYmVyKSB7XHJcbiAgICByZXR1cm4gJyc7XHJcbiAgfVxyXG5cclxuICBsZXQgY29sb3IgPSAnJztcclxuICBsZXQgaW5wdXROdW1iZXIgPSBwYXJzZUZsb2F0KHZhbHVlKTtcclxuICBpZiAoaW5wdXROdW1iZXIgPiAxMDApIHtcclxuICAgIGlucHV0TnVtYmVyID0gMTAwO1xyXG4gIH1cclxuXHJcbiAgaWYgKGlucHV0TnVtYmVyIDwgMzApIHtcclxuICAgIGNvbG9yID0gJ2Rhbmdlcic7XHJcbiAgfSBlbHNlIGlmIChpbnB1dE51bWJlciA8IDcwKSB7XHJcbiAgICBjb2xvciA9ICd3YXJuaW5nJztcclxuICB9IGVsc2Uge1xyXG4gICAgY29sb3IgPSAnc3VjY2Vzcyc7XHJcbiAgfVxyXG5cclxuICBjb25zdCBvdXRwdXQgPSBgPGRpdiBjbGFzcz1cInByb2dyZXNzXCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwicHJvZ3Jlc3MtYmFyIHByb2dyZXNzLWJhci0ke2NvbG9yfSBiZy0ke2NvbG9yfVwiIHJvbGU9XCJwcm9ncmVzc2JhclwiIGFyaWEtdmFsdWVub3c9XCIke2lucHV0TnVtYmVyfVwiIGFyaWEtdmFsdWVtaW49XCIwXCIgYXJpYS12YWx1ZW1heD1cIjEwMFwiIHN0eWxlPVwibWluLXdpZHRoOiAyZW07IHdpZHRoOiAke2lucHV0TnVtYmVyfSU7XCI+XHJcbiAgICAke2lucHV0TnVtYmVyfSVcclxuICAgIDwvZGl2PlxyXG4gIDwvZGl2PmA7XHJcblxyXG4gIHJldHVybiBvdXRwdXQucmVwbGFjZSgvXFxzezIsfS9nLCAnICcpLnRyaW0oKTtcclxufTtcclxuIl19