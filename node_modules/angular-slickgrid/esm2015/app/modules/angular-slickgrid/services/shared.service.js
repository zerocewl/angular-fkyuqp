import { Subject } from 'rxjs';
export class SharedService {
    constructor() {
        this.onColumnsChanged = new Subject();
    }
    // --
    // public
    /** Getter for All Columns  in the grid (hidden/visible) */
    get allColumns() {
        return this._allColumns;
    }
    /** Setter for All Columns  in the grid (hidden/visible) */
    set allColumns(allColumns) {
        this._allColumns = allColumns;
    }
    /** Getter for the Column Definitions pulled through the Grid Object */
    get columnDefinitions() {
        return (this._grid && this._grid.getColumns) ? this._grid.getColumns() : [];
    }
    /** Getter for the Current Pagination (when Pagination is enabled) */
    get currentPagination() {
        return this._currentPagination;
    }
    /** Setter for the Current Pagination (when Pagination is enabled) */
    set currentPagination(currentPagination) {
        this._currentPagination = currentPagination;
    }
    /** Getter for SlickGrid DataView object */
    get dataView() {
        return this._dataView;
    }
    /** Setter for SlickGrid DataView object */
    set dataView(dataView) {
        this._dataView = dataView;
    }
    /** Getter for SlickGrid Grid object */
    get grid() {
        return this._grid;
    }
    /** Setter for SlickGrid Grid object */
    set grid(grid) {
        this._grid = grid;
    }
    /** Getter for the Grid Options pulled through the Grid Object */
    get gridOptions() {
        return this._gridOptions || this._grid && this._grid.getOptions && this._grid.getOptions() || {};
    }
    /** Setter for the Grid Options pulled through the Grid Object */
    set gridOptions(gridOptions) {
        this._gridOptions = gridOptions;
    }
    /** Getter for the Grid Options */
    get groupItemMetadataProvider() {
        return this._groupItemMetadataProvider;
    }
    /** Setter for the Grid Options */
    set groupItemMetadataProvider(groupItemMetadataProvider) {
        this._groupItemMetadataProvider = groupItemMetadataProvider;
    }
    /** Getter for the Visible Columns in the grid */
    get visibleColumns() {
        return this._visibleColumns;
    }
    /** Setter for the Visible Columns in the grid */
    set visibleColumns(visibleColumns) {
        this._visibleColumns = visibleColumns;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmVkLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLXNsaWNrZ3JpZC8iLCJzb3VyY2VzIjpbImFwcC9tb2R1bGVzL2FuZ3VsYXItc2xpY2tncmlkL3NlcnZpY2VzL3NoYXJlZC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFJL0IsTUFBTSxPQUFPLGFBQWE7SUFBMUI7UUFRRSxxQkFBZ0IsR0FBRyxJQUFJLE9BQU8sRUFBWSxDQUFDO0lBMEU3QyxDQUFDO0lBeEVDLEtBQUs7SUFDTCxTQUFTO0lBRVQsMkRBQTJEO0lBQzNELElBQUksVUFBVTtRQUNaLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUMxQixDQUFDO0lBQ0QsMkRBQTJEO0lBQzNELElBQUksVUFBVSxDQUFDLFVBQW9CO1FBQ2pDLElBQUksQ0FBQyxXQUFXLEdBQUcsVUFBVSxDQUFDO0lBQ2hDLENBQUM7SUFFRCx1RUFBdUU7SUFDdkUsSUFBSSxpQkFBaUI7UUFDbkIsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQzlFLENBQUM7SUFFRCxxRUFBcUU7SUFDckUsSUFBSSxpQkFBaUI7UUFDbkIsT0FBTyxJQUFJLENBQUMsa0JBQWtCLENBQUM7SUFDakMsQ0FBQztJQUVELHFFQUFxRTtJQUNyRSxJQUFJLGlCQUFpQixDQUFDLGlCQUFvQztRQUN4RCxJQUFJLENBQUMsa0JBQWtCLEdBQUcsaUJBQWlCLENBQUM7SUFDOUMsQ0FBQztJQUVELDJDQUEyQztJQUMzQyxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDeEIsQ0FBQztJQUNELDJDQUEyQztJQUMzQyxJQUFJLFFBQVEsQ0FBQyxRQUFhO1FBQ3hCLElBQUksQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDO0lBQzVCLENBQUM7SUFFRCx1Q0FBdUM7SUFDdkMsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7SUFDRCx1Q0FBdUM7SUFDdkMsSUFBSSxJQUFJLENBQUMsSUFBUztRQUNoQixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztJQUNwQixDQUFDO0lBRUQsaUVBQWlFO0lBQ2pFLElBQUksV0FBVztRQUNiLE9BQU8sSUFBSSxDQUFDLFlBQVksSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFLElBQUksRUFBRSxDQUFDO0lBQ25HLENBQUM7SUFFRCxpRUFBaUU7SUFDakUsSUFBSSxXQUFXLENBQUMsV0FBdUI7UUFDckMsSUFBSSxDQUFDLFlBQVksR0FBRyxXQUFXLENBQUM7SUFDbEMsQ0FBQztJQUVELGtDQUFrQztJQUNsQyxJQUFJLHlCQUF5QjtRQUMzQixPQUFPLElBQUksQ0FBQywwQkFBMEIsQ0FBQztJQUN6QyxDQUFDO0lBQ0Qsa0NBQWtDO0lBQ2xDLElBQUkseUJBQXlCLENBQUMseUJBQThCO1FBQzFELElBQUksQ0FBQywwQkFBMEIsR0FBRyx5QkFBeUIsQ0FBQztJQUM5RCxDQUFDO0lBRUQsaURBQWlEO0lBQ2pELElBQUksY0FBYztRQUNoQixPQUFPLElBQUksQ0FBQyxlQUFlLENBQUM7SUFDOUIsQ0FBQztJQUNELGlEQUFpRDtJQUNqRCxJQUFJLGNBQWMsQ0FBQyxjQUF3QjtRQUN6QyxJQUFJLENBQUMsZUFBZSxHQUFHLGNBQWMsQ0FBQztJQUN4QyxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcblxyXG5pbXBvcnQgeyBDb2x1bW4sIEN1cnJlbnRQYWdpbmF0aW9uLCBHcmlkT3B0aW9uIH0gZnJvbSAnLi4vbW9kZWxzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBTaGFyZWRTZXJ2aWNlIHtcclxuICBwcml2YXRlIF9hbGxDb2x1bW5zOiBDb2x1bW5bXTtcclxuICBwcml2YXRlIF9kYXRhVmlldzogYW55O1xyXG4gIHByaXZhdGUgX2dyb3VwSXRlbU1ldGFkYXRhUHJvdmlkZXI6IGFueTtcclxuICBwcml2YXRlIF9ncmlkOiBhbnk7XHJcbiAgcHJpdmF0ZSBfZ3JpZE9wdGlvbnM6IEdyaWRPcHRpb247XHJcbiAgcHJpdmF0ZSBfY3VycmVudFBhZ2luYXRpb246IEN1cnJlbnRQYWdpbmF0aW9uO1xyXG4gIHByaXZhdGUgX3Zpc2libGVDb2x1bW5zOiBDb2x1bW5bXTtcclxuICBvbkNvbHVtbnNDaGFuZ2VkID0gbmV3IFN1YmplY3Q8Q29sdW1uW10+KCk7XHJcblxyXG4gIC8vIC0tXHJcbiAgLy8gcHVibGljXHJcblxyXG4gIC8qKiBHZXR0ZXIgZm9yIEFsbCBDb2x1bW5zICBpbiB0aGUgZ3JpZCAoaGlkZGVuL3Zpc2libGUpICovXHJcbiAgZ2V0IGFsbENvbHVtbnMoKTogQ29sdW1uW10ge1xyXG4gICAgcmV0dXJuIHRoaXMuX2FsbENvbHVtbnM7XHJcbiAgfVxyXG4gIC8qKiBTZXR0ZXIgZm9yIEFsbCBDb2x1bW5zICBpbiB0aGUgZ3JpZCAoaGlkZGVuL3Zpc2libGUpICovXHJcbiAgc2V0IGFsbENvbHVtbnMoYWxsQ29sdW1uczogQ29sdW1uW10pIHtcclxuICAgIHRoaXMuX2FsbENvbHVtbnMgPSBhbGxDb2x1bW5zO1xyXG4gIH1cclxuXHJcbiAgLyoqIEdldHRlciBmb3IgdGhlIENvbHVtbiBEZWZpbml0aW9ucyBwdWxsZWQgdGhyb3VnaCB0aGUgR3JpZCBPYmplY3QgKi9cclxuICBnZXQgY29sdW1uRGVmaW5pdGlvbnMoKTogQ29sdW1uW10ge1xyXG4gICAgcmV0dXJuICh0aGlzLl9ncmlkICYmIHRoaXMuX2dyaWQuZ2V0Q29sdW1ucykgPyB0aGlzLl9ncmlkLmdldENvbHVtbnMoKSA6IFtdO1xyXG4gIH1cclxuXHJcbiAgLyoqIEdldHRlciBmb3IgdGhlIEN1cnJlbnQgUGFnaW5hdGlvbiAod2hlbiBQYWdpbmF0aW9uIGlzIGVuYWJsZWQpICovXHJcbiAgZ2V0IGN1cnJlbnRQYWdpbmF0aW9uKCk6IEN1cnJlbnRQYWdpbmF0aW9uIHwgdW5kZWZpbmVkIHtcclxuICAgIHJldHVybiB0aGlzLl9jdXJyZW50UGFnaW5hdGlvbjtcclxuICB9XHJcblxyXG4gIC8qKiBTZXR0ZXIgZm9yIHRoZSBDdXJyZW50IFBhZ2luYXRpb24gKHdoZW4gUGFnaW5hdGlvbiBpcyBlbmFibGVkKSAqL1xyXG4gIHNldCBjdXJyZW50UGFnaW5hdGlvbihjdXJyZW50UGFnaW5hdGlvbjogQ3VycmVudFBhZ2luYXRpb24pIHtcclxuICAgIHRoaXMuX2N1cnJlbnRQYWdpbmF0aW9uID0gY3VycmVudFBhZ2luYXRpb247XHJcbiAgfVxyXG5cclxuICAvKiogR2V0dGVyIGZvciBTbGlja0dyaWQgRGF0YVZpZXcgb2JqZWN0ICovXHJcbiAgZ2V0IGRhdGFWaWV3KCk6IGFueSB7XHJcbiAgICByZXR1cm4gdGhpcy5fZGF0YVZpZXc7XHJcbiAgfVxyXG4gIC8qKiBTZXR0ZXIgZm9yIFNsaWNrR3JpZCBEYXRhVmlldyBvYmplY3QgKi9cclxuICBzZXQgZGF0YVZpZXcoZGF0YVZpZXc6IGFueSkge1xyXG4gICAgdGhpcy5fZGF0YVZpZXcgPSBkYXRhVmlldztcclxuICB9XHJcblxyXG4gIC8qKiBHZXR0ZXIgZm9yIFNsaWNrR3JpZCBHcmlkIG9iamVjdCAqL1xyXG4gIGdldCBncmlkKCk6IGFueSB7XHJcbiAgICByZXR1cm4gdGhpcy5fZ3JpZDtcclxuICB9XHJcbiAgLyoqIFNldHRlciBmb3IgU2xpY2tHcmlkIEdyaWQgb2JqZWN0ICovXHJcbiAgc2V0IGdyaWQoZ3JpZDogYW55KSB7XHJcbiAgICB0aGlzLl9ncmlkID0gZ3JpZDtcclxuICB9XHJcblxyXG4gIC8qKiBHZXR0ZXIgZm9yIHRoZSBHcmlkIE9wdGlvbnMgcHVsbGVkIHRocm91Z2ggdGhlIEdyaWQgT2JqZWN0ICovXHJcbiAgZ2V0IGdyaWRPcHRpb25zKCk6IEdyaWRPcHRpb24ge1xyXG4gICAgcmV0dXJuIHRoaXMuX2dyaWRPcHRpb25zIHx8IHRoaXMuX2dyaWQgJiYgdGhpcy5fZ3JpZC5nZXRPcHRpb25zICYmIHRoaXMuX2dyaWQuZ2V0T3B0aW9ucygpIHx8IHt9O1xyXG4gIH1cclxuXHJcbiAgLyoqIFNldHRlciBmb3IgdGhlIEdyaWQgT3B0aW9ucyBwdWxsZWQgdGhyb3VnaCB0aGUgR3JpZCBPYmplY3QgKi9cclxuICBzZXQgZ3JpZE9wdGlvbnMoZ3JpZE9wdGlvbnM6IEdyaWRPcHRpb24pIHtcclxuICAgIHRoaXMuX2dyaWRPcHRpb25zID0gZ3JpZE9wdGlvbnM7XHJcbiAgfVxyXG5cclxuICAvKiogR2V0dGVyIGZvciB0aGUgR3JpZCBPcHRpb25zICovXHJcbiAgZ2V0IGdyb3VwSXRlbU1ldGFkYXRhUHJvdmlkZXIoKTogYW55IHtcclxuICAgIHJldHVybiB0aGlzLl9ncm91cEl0ZW1NZXRhZGF0YVByb3ZpZGVyO1xyXG4gIH1cclxuICAvKiogU2V0dGVyIGZvciB0aGUgR3JpZCBPcHRpb25zICovXHJcbiAgc2V0IGdyb3VwSXRlbU1ldGFkYXRhUHJvdmlkZXIoZ3JvdXBJdGVtTWV0YWRhdGFQcm92aWRlcjogYW55KSB7XHJcbiAgICB0aGlzLl9ncm91cEl0ZW1NZXRhZGF0YVByb3ZpZGVyID0gZ3JvdXBJdGVtTWV0YWRhdGFQcm92aWRlcjtcclxuICB9XHJcblxyXG4gIC8qKiBHZXR0ZXIgZm9yIHRoZSBWaXNpYmxlIENvbHVtbnMgaW4gdGhlIGdyaWQgKi9cclxuICBnZXQgdmlzaWJsZUNvbHVtbnMoKTogQ29sdW1uW10ge1xyXG4gICAgcmV0dXJuIHRoaXMuX3Zpc2libGVDb2x1bW5zO1xyXG4gIH1cclxuICAvKiogU2V0dGVyIGZvciB0aGUgVmlzaWJsZSBDb2x1bW5zIGluIHRoZSBncmlkICovXHJcbiAgc2V0IHZpc2libGVDb2x1bW5zKHZpc2libGVDb2x1bW5zOiBDb2x1bW5bXSkge1xyXG4gICAgdGhpcy5fdmlzaWJsZUNvbHVtbnMgPSB2aXNpYmxlQ29sdW1ucztcclxuICB9XHJcbn1cclxuIl19