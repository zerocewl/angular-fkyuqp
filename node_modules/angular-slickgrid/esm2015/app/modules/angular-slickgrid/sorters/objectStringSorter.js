import { SortDirectionNumber } from './../models/index';
export const objectStringSorter = (value1, value2, sortDirection, sortColumn) => {
    if (!sortColumn || !sortColumn.dataKey) {
        throw new Error('Sorting a "FieldType.object" requires you to provide the "dataKey" (object property name) of the object so that we can use it to sort correctly');
    }
    const stringValue1 = value1.hasOwnProperty(sortColumn.dataKey) ? value1[sortColumn.dataKey] : value1;
    const stringValue2 = value2.hasOwnProperty(sortColumn.dataKey) ? value2[sortColumn.dataKey] : value2;
    if (sortDirection === undefined || sortDirection === null) {
        sortDirection = SortDirectionNumber.neutral;
    }
    let position = 0;
    if (typeof value1 !== 'object') {
        position = -99e+10;
    }
    else if (typeof value2 !== 'object') {
        position = 99e+10;
    }
    else if (!stringValue1) {
        position = -1;
    }
    else if (!stringValue2) {
        position = 1;
    }
    else if (stringValue1 === stringValue2) {
        position = 0;
    }
    else if (sortDirection) {
        position = stringValue1 < stringValue2 ? -1 : 1;
    }
    else {
        position = stringValue1 < stringValue2 ? 1 : -1;
    }
    return sortDirection * position;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2JqZWN0U3RyaW5nU29ydGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1zbGlja2dyaWQvIiwic291cmNlcyI6WyJhcHAvbW9kdWxlcy9hbmd1bGFyLXNsaWNrZ3JpZC9zb3J0ZXJzL29iamVjdFN0cmluZ1NvcnRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWtCLG1CQUFtQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFeEUsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQVcsQ0FBQyxNQUFXLEVBQUUsTUFBVyxFQUFFLGFBQTJDLEVBQUUsVUFBa0IsRUFBRSxFQUFFO0lBQ3RJLElBQUksQ0FBQyxVQUFVLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFO1FBQ3RDLE1BQU0sSUFBSSxLQUFLLENBQUMsaUpBQWlKLENBQUMsQ0FBQztLQUNwSztJQUVELE1BQU0sWUFBWSxHQUFHLE1BQU0sQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7SUFDckcsTUFBTSxZQUFZLEdBQUcsTUFBTSxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztJQUNyRyxJQUFJLGFBQWEsS0FBSyxTQUFTLElBQUksYUFBYSxLQUFLLElBQUksRUFBRTtRQUN6RCxhQUFhLEdBQUcsbUJBQW1CLENBQUMsT0FBTyxDQUFDO0tBQzdDO0lBRUQsSUFBSSxRQUFRLEdBQUcsQ0FBQyxDQUFDO0lBQ2pCLElBQUksT0FBTyxNQUFNLEtBQUssUUFBUSxFQUFFO1FBQzlCLFFBQVEsR0FBRyxDQUFDLE1BQU0sQ0FBQztLQUNwQjtTQUFNLElBQUksT0FBTyxNQUFNLEtBQUssUUFBUSxFQUFFO1FBQ3JDLFFBQVEsR0FBRyxNQUFNLENBQUM7S0FDbkI7U0FBTSxJQUFJLENBQUMsWUFBWSxFQUFFO1FBQ3hCLFFBQVEsR0FBRyxDQUFDLENBQUMsQ0FBQztLQUNmO1NBQU0sSUFBSSxDQUFDLFlBQVksRUFBRTtRQUN4QixRQUFRLEdBQUcsQ0FBQyxDQUFDO0tBQ2Q7U0FBTSxJQUFJLFlBQVksS0FBSyxZQUFZLEVBQUU7UUFDeEMsUUFBUSxHQUFHLENBQUMsQ0FBQztLQUNkO1NBQU0sSUFBSSxhQUFhLEVBQUU7UUFDeEIsUUFBUSxHQUFHLFlBQVksR0FBRyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDakQ7U0FBTTtRQUNMLFFBQVEsR0FBRyxZQUFZLEdBQUcsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ2pEO0lBRUQsT0FBTyxhQUFhLEdBQUcsUUFBUSxDQUFDO0FBQ2xDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbHVtbiwgU29ydGVyLCBTb3J0RGlyZWN0aW9uTnVtYmVyIH0gZnJvbSAnLi8uLi9tb2RlbHMvaW5kZXgnO1xyXG5cclxuZXhwb3J0IGNvbnN0IG9iamVjdFN0cmluZ1NvcnRlcjogU29ydGVyID0gKHZhbHVlMTogYW55LCB2YWx1ZTI6IGFueSwgc29ydERpcmVjdGlvbjogbnVtYmVyIHwgU29ydERpcmVjdGlvbk51bWJlciwgc29ydENvbHVtbjogQ29sdW1uKSA9PiB7XHJcbiAgaWYgKCFzb3J0Q29sdW1uIHx8ICFzb3J0Q29sdW1uLmRhdGFLZXkpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcignU29ydGluZyBhIFwiRmllbGRUeXBlLm9iamVjdFwiIHJlcXVpcmVzIHlvdSB0byBwcm92aWRlIHRoZSBcImRhdGFLZXlcIiAob2JqZWN0IHByb3BlcnR5IG5hbWUpIG9mIHRoZSBvYmplY3Qgc28gdGhhdCB3ZSBjYW4gdXNlIGl0IHRvIHNvcnQgY29ycmVjdGx5Jyk7XHJcbiAgfVxyXG5cclxuICBjb25zdCBzdHJpbmdWYWx1ZTEgPSB2YWx1ZTEuaGFzT3duUHJvcGVydHkoc29ydENvbHVtbi5kYXRhS2V5KSA/IHZhbHVlMVtzb3J0Q29sdW1uLmRhdGFLZXldIDogdmFsdWUxO1xyXG4gIGNvbnN0IHN0cmluZ1ZhbHVlMiA9IHZhbHVlMi5oYXNPd25Qcm9wZXJ0eShzb3J0Q29sdW1uLmRhdGFLZXkpID8gdmFsdWUyW3NvcnRDb2x1bW4uZGF0YUtleV0gOiB2YWx1ZTI7XHJcbiAgaWYgKHNvcnREaXJlY3Rpb24gPT09IHVuZGVmaW5lZCB8fCBzb3J0RGlyZWN0aW9uID09PSBudWxsKSB7XHJcbiAgICBzb3J0RGlyZWN0aW9uID0gU29ydERpcmVjdGlvbk51bWJlci5uZXV0cmFsO1xyXG4gIH1cclxuXHJcbiAgbGV0IHBvc2l0aW9uID0gMDtcclxuICBpZiAodHlwZW9mIHZhbHVlMSAhPT0gJ29iamVjdCcpIHtcclxuICAgIHBvc2l0aW9uID0gLTk5ZSsxMDtcclxuICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZTIgIT09ICdvYmplY3QnKSB7XHJcbiAgICBwb3NpdGlvbiA9IDk5ZSsxMDtcclxuICB9IGVsc2UgaWYgKCFzdHJpbmdWYWx1ZTEpIHtcclxuICAgIHBvc2l0aW9uID0gLTE7XHJcbiAgfSBlbHNlIGlmICghc3RyaW5nVmFsdWUyKSB7XHJcbiAgICBwb3NpdGlvbiA9IDE7XHJcbiAgfSBlbHNlIGlmIChzdHJpbmdWYWx1ZTEgPT09IHN0cmluZ1ZhbHVlMikge1xyXG4gICAgcG9zaXRpb24gPSAwO1xyXG4gIH0gZWxzZSBpZiAoc29ydERpcmVjdGlvbikge1xyXG4gICAgcG9zaXRpb24gPSBzdHJpbmdWYWx1ZTEgPCBzdHJpbmdWYWx1ZTIgPyAtMSA6IDE7XHJcbiAgfSBlbHNlIHtcclxuICAgIHBvc2l0aW9uID0gc3RyaW5nVmFsdWUxIDwgc3RyaW5nVmFsdWUyID8gMSA6IC0xO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHNvcnREaXJlY3Rpb24gKiBwb3NpdGlvbjtcclxufTtcclxuIl19