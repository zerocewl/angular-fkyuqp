import { AngularUtilService } from './angularUtil.service';
import * as ɵngcc0 from '@angular/core';
interface DropDownServiceParams {
    /** the custom action formatter component that contains the dropdown */
    component: any;
    /** help to get the data context */
    args: any;
    /** parent container */
    parent: any;
    /** Offset bottom when using a Drop Up, if we need to reposition the dropdown component */
    offsetDropupBottom?: number;
    /** Offset left if we need to reposition the dropdown component */
    offsetLeft?: number;
    /** Offset top if we need to reposition the dropdown component */
    offsetTop?: number;
}
export declare class BsDropDownService {
    private angularUtilService;
    private _domContainerElement;
    private _domElement;
    constructor(angularUtilService: AngularUtilService);
    readonly domElement: any;
    readonly domContainerElement: any;
    readonly gridViewport: any;
    dispose(): void;
    dropContainerShow(): void;
    render(dropdownParams: DropDownServiceParams): Promise<{}>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BsDropDownService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<BsDropDownService>;
}
export {};

//# sourceMappingURL=bsDropdown.service.d.ts.map