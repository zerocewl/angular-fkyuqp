import { Column, ColumnFilter, Filter, FilterArguments, FilterCallback, OperatorType, OperatorString, SearchTerm } from './../models/index';
export declare class SliderFilter implements Filter {
    private _clearFilterTriggered;
    private _currentValue;
    private _shouldTriggerQuery;
    private _elementRangeInputId;
    private _elementRangeOutputId;
    private $filterElm;
    grid: any;
    searchTerms: SearchTerm[];
    columnDef: Column;
    callback: FilterCallback;
    /** Getter for the Column Filter */
    readonly columnFilter: ColumnFilter;
    /** Getter to know what would be the default operator when none is specified */
    readonly defaultOperator: OperatorType | OperatorString;
    /** Getter for the Filter Generic Params */
    private readonly filterParams;
    /** Getter for the `filter` properties */
    private readonly filterProperties;
    /** Setter for the filter operator */
    operator: OperatorType | OperatorString;
    /**
     * Initialize the Filter
     */
    init(args: FilterArguments): void;
    /**
     * Clear the filter value
     */
    clear(shouldTriggerQuery?: boolean): void;
    /**
     * destroy the filter
     */
    destroy(): void;
    /**
     * Get selected value retrieved from the slider element
     * @params selected items
     */
    getValues(): number;
    /** Set value(s) on the DOM element */
    setValues(values: SearchTerm | SearchTerm[], operator?: OperatorType | OperatorString): void;
    /**
     * Create the HTML template as a string
     */
    private buildTemplateHtmlString;
    /**
     * From the html template string, create a DOM element
     * @param filterTemplate string
     * @param searchTerm optional preset search terms
     */
    private createDomElement;
}
